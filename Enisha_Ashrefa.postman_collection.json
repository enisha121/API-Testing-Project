{
	"info": {
		"_postman_id": "40a85a0d-8e0a-4f22-88d8-5ea410974938",
		"name": "Enisha_Ashrefa",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28551472"
	},
	"item": [
		{
			"name": "Create_Student",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"\r",
							"pm.environment.set(\"id\",jsonData.id)\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"  pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var first_name = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"pm.environment.set(\"first_name\", first_name)\r",
							"console.log(\"First Name \"+ first_name)\r",
							"\r",
							"var middle_name = pm.variables.replaceIn(\"{{$randomUserName}}\")\r",
							"pm.environment.set(\"middle_name\", middle_name)\r",
							"console.log(\"Middle Name \"+ middle_name)\r",
							"\r",
							"var last_name = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"pm.environment.set(\"last_name\", last_name)\r",
							"console.log(\"Last Name \"+ last_name)\r",
							"\r",
							"\r",
							"//Generate random Date of Birth in MM/DD/YYYY Format\r",
							"function randomDate(start, end) {\r",
							"    return new Date(start.getTime() + Math.random() * (end.getTime() - start.getTime()));\r",
							"}\r",
							"var date = randomDate(new Date(2000, 0, 1), new Date());\r",
							"var date_of_birth = (date.getMonth()+1) + '/' + date.getDate() + '/' + date.getFullYear();\r",
							"pm.environment.set(\"date_of_birth\", date_of_birth)\r",
							"console.log(\"DOB: \" + date_of_birth);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"first_name\": \"{{first_name}}\",\r\n  \"middle_name\": \"{{middle_name}}\",\r\n  \"last_name\": \"{{last_name}}\",\r\n  \"date_of_birth\": \"{{date_of_birth}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/api/studentsDetails",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"studentsDetails"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get_Student",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"    var jsonData = pm.response.json()\r",
							"    // var i =0;\r",
							"    // for ( i = 0; i<jsonData.length; i++){\r",
							"    //     console.log(jsonData[i])\r",
							"            \r",
							"    // }\r",
							"\r",
							"   \r",
							"\r",
							"\r",
							"   //Status code validation\r",
							"    pm.test(\"Status Code Validation\", ()=>{\r",
							"         pm.response.to.have.status(200);\r",
							"    })\r",
							"    \r",
							"    //response length\r",
							"     console.log(\"The Response length: \"+jsonData.length)\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/studentsDetails/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"studentsDetails",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get_Specific_Student",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var code = pm.response.code\r",
							"console.log(code)\r",
							"\r",
							"if (code == 200){\r",
							"        var jsonData = pm.response.json()\r",
							"\r",
							"        //id\r",
							"\r",
							"        pm.test(\"ID Validation\", function(){\r",
							"        \r",
							"        pm.expect(jsonData.data.id).to.eql(pm.environment.get(\"id\"))\r",
							"        })\r",
							"\r",
							" \r",
							"        //first name\r",
							"\r",
							"        pm.test(\"First Name Validation\", function(){\r",
							"        \r",
							"        pm.expect(jsonData.data.first_name).to.eql(pm.environment.get(\"first_name\"))\r",
							"        })\r",
							"\r",
							"\r",
							"        //middle name\r",
							"\r",
							"        pm.test(\"Middle Name Validation\", function(){\r",
							"        pm.expect(jsonData.data.middle_name).to.eql(pm.environment.get(\"middle_name\"))\r",
							"        })\r",
							"\r",
							"        //last name \r",
							"\r",
							"        pm.test(\"Last Name Validation\", function(){\r",
							"        pm.expect(jsonData.data.last_name).to.eql(pm.environment.get(\"last_name\"))\r",
							"        })\r",
							"\r",
							"\r",
							"\r",
							"    //dob\r",
							"        pm.test(\"Date of birth Validation\", function(){\r",
							"        pm.expect(jsonData.data.date_of_birth).to.eql(pm.environment.get(\"date_of_birth\"))\r",
							"        })\r",
							"        \r",
							"} \r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/studentsDetails/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"studentsDetails",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create_Tech_Skills",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"var jsonData = pm.response.json()\r",
							"\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"\r",
							"var requestData = JSON.parse(pm.request.body);\r",
							"pm.environment.set(\"language\", requestData.language)\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \r\n    \"id\": 1, \r\n    \"language\": [ \r\n        \"Bangla\", \r\n        \"English\" \r\n    ], \r\n    \"yearexp\": \"2016/2/17\", \r\n    \"lastused\": \"sample string 3\", \r\n    \"st_id\": \"{{id}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://thetestingworldapi.com/api/technicalskills",
					"protocol": "https",
					"host": [
						"thetestingworldapi",
						"com"
					],
					"path": [
						"api",
						"technicalskills"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create_Address",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"\r",
							"\r",
							"var jsonData = pm.response.json()\r",
							"\r",
							"pm.environment.set(\"msg\",jsonData.msg)\r",
							"\r",
							"pm.environment.set(\"status\",jsonData.status)\r",
							"\r",
							"pm.environment.set(\"id\",jsonData.id)\r",
							"\r",
							"//status code validation\r",
							"pm.test(\"Status code Validation\", function () {\r",
							"  pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"//status validation\r",
							"pm.test(\"Status validation\", function () {\r",
							"      pm.expect(jsonData.status).to.eql(pm.environment.get(\"status\"));\r",
							"});\r",
							"\r",
							"//msg validation\r",
							"pm.test(\"Msg validation\", function () {\r",
							"      pm.expect(jsonData.msg).to.eql(pm.environment.get(\"msg\"));\r",
							"});\r",
							"\r",
							"var requestData = xml2Json(pm.request.body.raw);\r",
							"pm.environment.set(\"House_Number\", requestData.Permanent_Address.House_Number)\r",
							"\r",
							"\r",
							"pm.environment.set(\"City\", requestData.Permanent_Address.City)\r",
							"\r",
							"\r",
							"pm.environment.set(\"Country\", requestData.Permanent_Address.Country)\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{ \r\n    \"Permanent_Address\": { \r\n        \"House_Number\": \"232\",\r\n        \"City\": \"dhaka\",\r\n        \"State\": \"dhaka\", \r\n        \"Country\": \"BD\",\r\n        \"PhoneNumber\": [ \r\n            { \r\n                \"Std_Code\": \"123\",\r\n                \"Home\": \"sample\",\r\n                \"Mobile\": \"sample\" \r\n            },\r\n            { \r\n                \"Std_Code\": \"00354\",\r\n                \"Home\": \"26458\", \r\n                \"Mobile\": \"0364812988\" \r\n            } \r\n        ] \r\n    },\r\n    \"stId\": \"{{id}}\"\r\n} \r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://thetestingworldapi.com/api/addresses",
					"protocol": "https",
					"host": [
						"thetestingworldapi",
						"com"
					],
					"path": [
						"api",
						"addresses"
					]
				}
			},
			"response": []
		},
		{
			"name": "Final_Student_Details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var code = pm.response.code\r",
							"console.log(code)\r",
							"\r",
							"    var jsonData = pm.response.json()\r",
							"    // var i =0;\r",
							"    // for ( i = 0; i<jsonData.length; i++){\r",
							"    //     console.log(jsonData[i])\r",
							"            \r",
							"    // }\r",
							"\r",
							"   \r",
							"\r",
							"\r",
							"   //Status code validation\r",
							"    pm.test(\"Status Code Validation\", ()=>{\r",
							"         pm.response.to.have.status(200);\r",
							"    })\r",
							"\r",
							"    //language\r",
							"    pm.test(\"Language Validation\", ()=>{\r",
							"           pm.expect(jsonData.data.TechnicalDetails[0].language).to.eql(pm.environment.get(\"language\"));\r",
							"    })\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/api/FinalStudentDetails/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"FinalStudentDetails",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	]
}